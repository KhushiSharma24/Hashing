//Find Sum of Range  [l……….r] where(l<=r) using Prefix sum.
//Optimised Approach:- For given array, construct a prefix array of size n,
//and prefix[i] = prefix[i-1] + arr[i]. After creating this prefix Array


import java.util.*;
public class prefixSum {
    public static int[] prefixRange(int[] nums){
        int n=nums.length;
        int [] prefix=new int[n+1];
        for(int i=1;i<n;i++){
            prefix[i]=prefix[i-1]+nums[i];

        }
        return prefix;
    }
    public static int range(int[] prefix,int l,int r){
        return prefix[r]-prefix[l-1];
    }
    public static void main(String [] args){
        int[] nums = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
        int [] prefix=prefixRange(nums);
        int l=3;
        int r=7;
        System.out.println(range(prefix,l,r));
    }
}

OUTPUT: 25
