//Given 5 arrays :- A,B,C,D,E  all of size “N”
//Element in the array can range from [-10^9……….10^9]
//Find the number of tuplets (i,j,k,l,m) such that
//a[i] + b[j] + c[k] + d[l] + e[m] = 0
//A = [2 5]
//B = [3 8]
//C = [-5 8]
//D = [5 10]
//E = [-10 100]
//Output - 1 (2,5,-5,10,-10)


import java.util.*;
public class NutanixOA {
    public static void main(String [] args){
        int n = 2; // Assuming n is 2 as per provided arrays
        int[] a = {2, 5};
        int[] b = {3, 8};
        int[] c = {-5, 8};
        int[] d = {5, 10};
        int[] e = {-10, 100};
        HashMap<Integer,Integer> hm=new HashMap<>();
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                int sum=d[i]+e[j];
                if(hm.containsKey(sum)){
                    hm.put(sum,hm.get(sum)+1);
                }
                else{
                    hm.put(sum,1);
                }
            }
        }
        int co=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                for(int k=0;k<n;k++){
                    int y=-(a[i]+b[j]+c[k]);
                    if(hm.containsKey(y)){
                        co+=hm.get(y);
                    }
                }
            }
        }
        System.out.println(co);
    }
}

OUTPUT: 2
